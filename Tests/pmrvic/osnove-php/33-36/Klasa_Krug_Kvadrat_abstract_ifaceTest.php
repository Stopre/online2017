<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-12-14 at 09:06:44.
 */
abstract class ALik{
    const PI = 3.14;
    public abstract function opseg();
    public abstract function povrsina();
    public function toString(){
        echo "<br>Ja sam objekt sam tipa "
        .get_class($this)
        .", a nastao sam iz klase "
        .__CLASS__;
    }
}
interface ILik{
    public function getboja();
}
interface IKrug extends ILik{
    public function srediste();
}
interface IKvadrat{
    public function brojstranica();
}

class Kvadrat extends ALik implements IKvadrat{
    private $a; // stranica kvadrata
    function __construct($a){
        $this->a=$a;
    }
    public function seta($a){
        $this->__construct($a);
    }
    public function opseg(){
        // vrati opseg
       return 4*$this->a; 
    }
    public function povrsina(){
        // vrati povrsinu
        return $this->a*$this->a;
    }

    public function brojstranica() {
        return 4;
    }

}
class Krug extends ALik implements IKrug{
    private $r; // polumjer kruga
    private $boja;
    function __construct($r){
        // postavi svojstvo polumjera
        $this->r=$r;
        
    }
    public function opseg(){
        // vrati opseg
         
        // MOÅ½E OVAKO PUTEM ZADANE KONSTANTE:
        // return 2*$this->r* ALik::PI;
        
        // Ili puna vrijednost konstante pi
       return 2*$this->r* pi(); 
    }
    public function povrsina(){
        // vrati povrsinu
        return $this->r*$this->r* parent::PI;
    }

    public function setboja($boja) {
        $this->boja=$boja;
    }
    public function getboja() {
        return $this->boja;
    }
    public function srediste() {
        return $this->r/2;
    }

    public function boja() {
        
    }

}



use PHPUnit\Framework\TestCase;
class KvadratTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Kvadrat
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Kvadrat(5);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kvadrat::opseg
     * @todo   Implement testOpseg().
     */
    public function testOpseg()
    { 
        $this->assertEquals($this->object->opseg(),20);
        $this->assertNotEquals($this->object->opseg(),21);
        $this->assertNotEquals($this->object->opseg(),19.9);
    }

    /**
     * @covers Kvadrat::povrsina
     * @todo   Implement testPovrsina().
     */
    public function testPovrsina()
    {
        $this->object->seta(2);
$this->assertEquals($this->object->povrsina(),4);
    }

    /**
     * @covers Kvadrat::brojstranica
     * @todo   Implement testBrojstranica().
     */
    public function testBrojstranica()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }
}
